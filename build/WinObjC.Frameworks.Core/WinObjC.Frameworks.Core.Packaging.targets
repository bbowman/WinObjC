<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <_CoreCompileOverrideDependsOn Condition="'$(SkipGetPackageContentsForOtherPlatforms)' != 'true'">Pack</_CoreCompileOverrideDependsOn>
    <IsPackable Condition="'$(SkipGetPackageContentsForOtherPlatforms)' != 'true'">true</IsPackable>
  </PropertyGroup>

  <Target Name="CoreCompile" DependsOnTargets="$(_CoreCompileOverrideDependsOn)" />

  <Target Name="AddSingleConfigBuildOutput"  Returns="@(_PackageContentsForPlat)"> 
    <MSBuild Projects="$(SolutionPath)"
       Targets="GetSolutionConfigurationContents"
       Properties="Configuration=$(Configuration);Platform=$(Platform)">
      <Output TaskParameter="TargetOutputs" ItemName="_SolutionConfigurationContents" />
    </MSBuild>

    <Message Text="AddSingleConfigBuildOutput Platform: $(Platform)" Importance="High"/>

    <MSBuild Projects="$(MSBuildProjectFile)"
       Targets="GetPackageContents"
       Properties="SkipGetPackageContentsForOtherPlatforms=true;BuildingInsideVisualStudio=false;BuildProjectReferences=true;Configuration=$(Configuration);Platform=$(Platform);CurrentSolutionConfigurationContents=%(_SolutionConfigurationContents.Identity);GetPackageContentsDependsOn=Build;$(GetPackageContentsDependsOn)">
      <Output TaskParameter="TargetOutputs" ItemName="_PackageContentsForPlat" />
    </MSBuild>
  </Target>

  <Target Name="AddOtherConfigsBuiltOutput" BeforeTargets="GetPackageContents" Condition="'$(SkipGetPackageContentsForOtherPlatforms)' != 'true' AND '$(Platform)' == 'AnyCPU'">

    <ItemGroup>
      <_PackTargetPlat Include="%(ProjectConfiguration.Platform)"
              Condition="'%(ProjectConfiguration.Configuration)' == '$(Configuration)' AND '%(ProjectConfiguration.Platform)' != '$(Platform)'" />
    </ItemGroup>
    
    <MSBuild Projects="$(MSBuildProjectFile)"
         Targets="AddSingleConfigBuildOutput"
         Properties="Platform=%(_PackTargetPlat.Identity)">
      <Output TaskParameter="TargetOutputs" ItemName="_OtherPackageContents" />
    </MSBuild>

    <ItemGroup>
      <PackageFile Include="@(_OtherPackageContents)" />
    </ItemGroup>

  </Target>


  <Target Name="AddBuiltOutput" BeforeTargets="GetPackageContents" Condition="'$(SkipGetPackageContentsForOtherPlatforms)' != 'true'">

      <ItemGroup>
          <!-- Public includes that aren't framework specific are assumed to be part of core.  -->
          <_IncludeFiles Include="$(MSBuildThisFileDirectory)..\..\include\*.h"/>

          <PackageFile Include="@(_IncludeFiles)" Condition="Exists('%(FullPath)')">
              <PackagePath>build\include\%(Filename)%(Extension)</PackagePath>
          </PackageFile>

          <!-- Extra starboard Includes -->
          <_VCIncludes Include="$(MSBuildThisFileDirectory)..\..\include\VCInclude\*.*"/>
          <_CommonCryptoIncludes Include="$(MSBuildThisFileDirectory)..\..\include\CommonCrypto\*.*"/>
          
          <PackageFile Include="@(_VCIncludes)" Condition="Exists('%(FullPath)')">
              <PackagePath>build\include\VCInclude\%(Filename)%(Extension)</PackagePath>
          </PackageFile>

          <PackageFile Include="@(_CommonCryptoIncludes)" Condition="Exists('%(FullPath)')">
              <PackagePath>build\include\CommonCrypto\%(Filename)%(Extension)</PackagePath>
          </PackageFile>

          <PackageFile Include="$(MSBuildThisFileDirectory)$(PackageId).props" Condition="Exists('$(MSBuildThisFileDirectory)$(PackageId).props')">
              <PackagePath>build\$(PackageId).props</PackagePath>
          </PackageFile>
          <PackageFile Include="$(MSBuildThisFileDirectory)$(PackageId).targets" Condition="Exists('$(MSBuildThisFileDirectory)$(PackageId).targets')">
              <PackagePath>build\$(PackageId).targets</PackagePath>
          </PackageFile>
      </ItemGroup>
  </Target>
  
</Project>